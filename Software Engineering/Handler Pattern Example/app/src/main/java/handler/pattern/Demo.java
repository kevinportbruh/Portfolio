/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package handler.pattern;
import java.util.ArrayList;
import java.util.Scanner;
//this is the main class that will be used to test the handler pattern
//welcome to the pet adoption center (all the pets used in this example have homes)
public class Demo {
    static Scanner sc = new Scanner(System.in);
    static ArrayList<Pet> pets = new ArrayList<Pet>();// this is our pet catalog that we will browse through
    static Boolean searchType = false;//false for filter out fitlers, true if only searching for animals with fitlers
    static int age;
    //some Pets for the center 
    //my babies <3
    static Pet p1 = new Pet("Nigel", 12,true,"Dog","Cute, adorable, loving compaion. You couldnt ask for a better dog", "Male");
    static Pet p2 = new Pet("Grof", 2,false,"Bird","Shy but loves to sing and loving green/yellow parakeet who has paired with Yameii. Will step up on your finger for some millet!", "Male");
    static Pet p3 = new Pet("Yammeii", 1,false,"Bird","A bossy white/blue parakeet, who loves to torment Grof when shes bored but is the sweetest parakeet to anyone she trusts!", "Female");
    static Pet p4 = new Pet("King Jeff III", 14,true,"Rabbit","A quiet little old man, loves to sit in his hut all day and presumably think about the world economic forums. He cannot resist a yummy banana","Male");
    //not my babies but some cute freind's pets.
    static Pet p5 = new Pet("Albert",14,true,"Cat","A fat orange cat, with a raspy smokers voice. Loves to cuddle and beg for food!","Male");
    static Pet p6 = new Pet("Suki",4,true,"Cat","A shy but loving black cat with a fierce little attiude, thinks shes a hardcore stray while only being on the street for less than a week","Female");
    static Pet p7 = new Pet("J'zargo",2,true,"Cat","An extremely energetic and buff grey kitten. He is the actually incarnation of J'zargo the Khajit sorcerer from Skyrim", "Male");
    
    static Pet p8 = new Pet("River",3,false, "Cat","Chillest black cat you've ever met, has no beef with anybody... that is unless your a tasty looking treat", "Female");
    

    public static void main(String[] args) {
        //add pets to the catalog
        pets.add(p1);
        pets.add(p2);
        pets.add(p3);
        pets.add(p4);
        pets.add(p5);
        pets.add(p6);
        pets.add(p7);
        pets.add(p8);
        //set up handlers for catalogue in the order:Species->Age->Sex->baseHandler(null/default handler)
        BaseHandler defaultHandler = new BaseHandler(null); // has no next handler
        SexHandler sexHandler = new SexHandler(defaultHandler);//has default handler as next
        AgeHandler ageHandler = new AgeHandler(sexHandler);
        SpeciesHandler speciesHandler = new SpeciesHandler(ageHandler);
        // post setup 
        System.out.println("Welcome to Pet adoption center! We choose from the avalible options below");
       
        int choice = -1;

        while(choice==-1){
            System.out.println("1) Browse all pets\n2) Search for a pet\n3) Exit");
            choice =sc.nextInt();
            if(choice ==1){
                System.out.println("These are all our animals");
                System.out.println("========");
                for(Pet p: pets){
                    System.out.println(p);
                    System.out.println("----");
                }
                System.out.println("========");
                choice = -1;
            }else if(choice ==2){
                //ask for search type, age, then all the strings they want to filter by
                System.out.println("To help your search our database, please enter the following information");
                System.out.print("Will you be filtering out or searching for a specific type of pet? (filter/search) - ");
                String filter = sc.nextLine().toLowerCase();
                while (!filter.equals("filter") && !filter.equals("search")){
                    System.out.print("Please enter a valid option - ");
                    filter = sc.nextLine();
                }
                if(filter.equals("filter")){
                    searchType = false;
                }else{
                    searchType = true;
                }
                System.out.print("What is the maxium age of the pet you are looking for? (enter -1 if you dont care)\n"+
                "(if filtering out then only animals older than your age will be displayed, else all animals <= the age specifiecd will be shown ) - ");
                age = sc.nextInt();
                if(age == -1){
                    age = (searchType)? Integer.MAX_VALUE:-1;
                }
                System.out.print("Almost there! Finally in one line seperated by spaces Please type out what tags you would like to filter out or search by"+
                "\nin any order type out the following: species of pet(s), and the sex (if filtering out only type male or female) (Both fields are optional) Press enter once to submit - ");
                sc.nextLine();
                String tags = sc.nextLine();
                String[] tagArray = tags.split(" ");

                //call the handler - 
                ArrayList<Pet> filtered = speciesHandler.handle(pets, searchType,age,tagArray);
                if(filtered.isEmpty()){
                    System.out.println("Sorry ): we dont have any pets that fit your search, try again.");
                }else{
                    System.out.println("These are all the animals that fit your search! See any you like?");
                    System.out.println("========");
                    for(Pet p: filtered){
                        System.out.println(p);
                        System.out.println("----");
                    }
                    System.out.println("========");
                }
                choice = -1;
            }else if(choice ==3){
                System.out.println("Thank you for visiting the pet adoption center! We hope you found a pet you like!");
                sc.close();
                System.exit(0);
            }else{
                System.out.println("Please enter a valid option");
                choice = -1;
            }
        }
        
    }
}
